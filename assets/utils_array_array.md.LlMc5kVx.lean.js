import{u as I}from"./chunks/createElement.D0SeZVIj.js";import{a as v,y as f,b as x,c as T,e as P,h as S,i as C,j as N,k as $,n as V,o as b}from"./chunks/index.JOlv62vK.js";import{d as _,D as l,o as E,b as D,w as t,I as a,a as i,t as e,m as F,g as A,h as q,c as O,k as s,R as g}from"./chunks/framework.v-2CxGd7.js";const w=_({__name:"getKeyList",setup(u){let h=[{name:"Mar",age:18},{name:"Tom",age:19},{name:"Boy",age:20}];return(p,k)=>{const n=l("n-gradient-text"),y=l("n-space"),B=l("naive-theme");return E(),D(B,null,{default:t(()=>[a(y,{vertical:"",className:"mt-2"},{default:t(()=>[i(" 原数组 "),a(n,{type:"info"},{default:t(()=>[i(e(F(h)),1)]),_:1}),i(" 提取name后的新数组 "),a(n,{type:"info"},{default:t(()=>[i(e(F(v)(F(h),"name")),1)]),_:1}),i(" 提取age后的新数组 "),a(n,{type:"info"},{default:t(()=>[i(e(F(v)(F(h),"age")),1)]),_:1})]),_:1})]),_:1})}}}),R=_({__name:"extractFields",setup(u){let h=[{name:"Mar",age:18,sex:"girl"},{name:"Tom",age:19,sex:"boy"}];return(p,k)=>{const n=l("n-gradient-text"),y=l("n-space"),B=l("naive-theme");return E(),D(B,null,{default:t(()=>[a(y,{vertical:"",className:"mt-2"},{default:t(()=>[i(" 原数组 "),a(n,{type:"info"},{default:t(()=>[i(e(F(h)),1)]),_:1}),i(" 提取name后的新数组 "),a(n,{type:"info"},{default:t(()=>[i(e(F(f)(F(h),"name")),1)]),_:1}),i(" 提取age后的新数组 "),a(n,{type:"info"},{default:t(()=>[i(e(F(f)(F(h),"age")),1)]),_:1}),i(" 提取age、sex后的新数组 "),a(n,{type:"info"},{default:t(()=>[i(e(F(f)(F(h),"age","sex")),1)]),_:1})]),_:1})]),_:1})}}}),J=_({__name:"arrayAllExist",setup(u){let h=[1,2,"3",4,10],p=[1,"3",2],k=[1,"3",2,8];function n(r){return JSON.stringify(r)}let y=A(()=>`${n(h)} ${x(h,p)?"包含 "+n(p)+" 中所有的值":"不包含 "+n(p)+" 中的所有值"}`),B=A(()=>`${n(h)} ${x(h,k)?"包含 "+n(k)+" 中所有的值":"不包含 "+n(k)+" 中的所有值"}`);return(r,c)=>{const d=l("n-gradient-text"),o=l("n-space"),m=l("naive-theme");return E(),D(m,null,{default:t(()=>[a(o,{vertical:"",className:"mt-2"},{default:t(()=>[a(d,{type:"info"},{default:t(()=>[i(e(F(y)),1)]),_:1}),a(d,{type:"info"},{default:t(()=>[i(e(F(B)),1)]),_:1})]),_:1})]),_:1})}}}),K=_({__name:"arrayAllExistDeep",setup(u){let h=[123,[[[1,2,3]]],{nested:{a:1,b:[1,2,3]}},[1,["a","b","c"]],{key:"value"}],p=[[[[1,2,3]]],{nested:{a:1,b:[1,2,3]}},[1,["a","b","c"]]],k=[{a:1},123];function n(r){return JSON.stringify(r)}let y=A(()=>`${n(h)} ${T(h,p)?"包含 "+n(p)+" 中所有的值":"不包含 "+n(p)+" 中的所有值"}`),B=A(()=>`${n(h)} ${T(h,k)?"包含 "+n(k)+" 中所有的值":"不包含 "+n(k)+" 中的所有值"}`);return(r,c)=>{const d=l("n-gradient-text"),o=l("n-space"),m=l("naive-theme");return E(),D(m,null,{default:t(()=>[a(o,{vertical:"",className:"mt-2"},{default:t(()=>[a(d,{type:"info"},{default:t(()=>[i(e(F(y)),1)]),_:1}),a(d,{type:"info"},{default:t(()=>[i(e(F(B)),1)]),_:1})]),_:1})]),_:1})}}}),L=_({__name:"arrayAnyExist",setup(u){let h=[1,4,10],p=[1,"3",2],k=[8,"9"];function n(r){return JSON.stringify(r)}let y=A(()=>`${n(h)} ${P(h,p)?"包含 "+n(p)+" 其中任意一个值":"不包含 "+n(p)+" 其中任意一个值"}`),B=A(()=>`${n(h)} ${P(h,k)?"包含 "+n(k)+" 其中任意一个值":"不包含 "+n(k)+" 其中任意一个值"}`);return(r,c)=>{const d=l("n-gradient-text"),o=l("n-space"),m=l("naive-theme");return E(),D(m,null,{default:t(()=>[a(o,{vertical:"",className:"mt-2"},{default:t(()=>[a(d,{type:"info"},{default:t(()=>[i(e(F(y)),1)]),_:1}),a(d,{type:"info"},{default:t(()=>[i(e(F(B)),1)]),_:1})]),_:1})]),_:1})}}}),M=_({__name:"arrayAnyExistDeep",setup(u){let h=[123,[[[1,2,3]]],{nested:{a:1,b:[1,2,3]}},[1,["a","b","c"]],{key:"value"}],p=[[[[1,2,3]]],{nested:{a:1,b:[1,2,3]}},[1,["a","b","c"]]],k=[12,456,[{a:1}],[[22,44]]];function n(r){return JSON.stringify(r)}let y=A(()=>`${n(h)} ${S(h,p)?"包含 "+n(p)+" 其中任意一个值":"不包含 "+n(p)+" 其中任意一个值"}`),B=A(()=>`${n(h)} ${S(h,k)?"包含 "+n(k)+" 其中任意一个值":"不包含 "+n(k)+" 其中任意一个值"}`);return(r,c)=>{const d=l("n-gradient-text"),o=l("n-space"),m=l("naive-theme");return E(),D(m,null,{default:t(()=>[a(o,{vertical:"",className:"mt-2"},{default:t(()=>[a(d,{type:"info"},{default:t(()=>[i(e(F(y)),1)]),_:1}),a(d,{type:"info"},{default:t(()=>[i(e(F(B)),1)]),_:1})]),_:1})]),_:1})}}}),j=_({__name:"swapOrder",setup(u){let h=q([1,2]),p=q([{name:"Tom",age:18},{name:"Jack",age:17}]),k=q([6,5,4,3,2,1]);function n(){C(h.value,0,1),C(p.value,0,1),C(k.value,0,5)}return(y,B)=>{const r=l("n-button"),c=l("n-gradient-text"),d=l("n-space"),o=l("naive-theme");return E(),D(o,null,{default:t(()=>[a(d,{vertical:"",className:"mt-2"},{default:t(()=>[a(r,{onClick:n},{default:t(()=>[i(" 点击互换两个元素位置 ")]),_:1}),a(c,{type:"info"},{default:t(()=>[i(e(F(h)),1)]),_:1}),a(c,{type:"info"},{default:t(()=>[i(e(F(p)),1)]),_:1}),a(c,{type:"info"},{default:t(()=>[i(e(F(k)),1)]),_:1})]),_:1})]),_:1})}}}),U=_({__name:"isIncludeAllChildren",setup(u){let h=[1,2,"3"],p=[1,2,"3",4,10],k=[{name:"Jack"},1,2,3,4,5,6,"3","1"];function n(r){return JSON.stringify(r)}let y=A(()=>`${n(k)} ${N(h,k)?"完全包含 "+n(h):"不完全包含 "+n(h)}`),B=A(()=>`${n(k)} ${N(p,k)?"完全包含 "+n(p):"不完全包含 "+n(p)}`);return(r,c)=>{const d=l("n-gradient-text"),o=l("n-space"),m=l("naive-theme");return E(),D(m,null,{default:t(()=>[a(o,{vertical:"",className:"mt-2"},{default:t(()=>[a(d,{type:"info"},{default:t(()=>[i(e(F(y)),1)]),_:1}),a(d,{type:"info"},{default:t(()=>[i(e(F(B)),1)]),_:1})]),_:1})]),_:1})}}}),Y=_({__name:"intersection",setup(u){let h=[1,2,"3"],p=[1,2,"3",4,10],k=[{name:"Jack"},1,2,3,4,5,6,"3","1"];function n(B){return JSON.stringify(B)}let y=A(()=>n(k)+"、"+n(h)+"、"+n(p)+" 的交集为 "+n($(k,h,p)));return(B,r)=>{const c=l("n-gradient-text"),d=l("n-space"),o=l("naive-theme");return E(),D(o,null,{default:t(()=>[a(d,{vertical:"",className:"mt-2"},{default:t(()=>[a(c,{type:"info"},{default:t(()=>[i(e(F(y)),1)]),_:1})]),_:1})]),_:1})}}}),z=_({__name:"randomDivide",setup(u){let h=q([]);function p(){h.value=b(900,20)}function k(){h.value=b(900,20,{order:"asc"})}function n(){h.value=b(900,20,{order:"desc"})}return p(),(y,B)=>{const r=l("n-button"),c=l("n-gradient-text"),d=l("n-space"),o=l("naive-theme");return E(),D(o,null,{default:t(()=>[a(d,{vertical:"",className:"mt-2"},{default:t(()=>[a(r,{onClick:p},{default:t(()=>[i(" 点击随机分配 ")]),_:1}),a(r,{onClick:k},{default:t(()=>[i(" 点击随机递增分配 ")]),_:1}),a(r,{onClick:n},{default:t(()=>[i(" 点击随机递减分配 ")]),_:1}),a(c,{type:"info"},{default:t(()=>[i(e(F(h)),1)]),_:1}),a(c,{type:"info"},{default:t(()=>[i(" 和为："+e(F(V)(F(h))),1)]),_:1}),a(c,{type:"info"},{default:t(()=>[i(" 长度："+e(F(h).length),1)]),_:1})]),_:1})]),_:1})}}}),G=s("div",{class:"tip custom-block"},[s("p",{class:"custom-block-title"},[i("支持任意 "),s("code",null,"JavaScript"),i(" 环境或框架")]),s("p",null,"处理数组")],-1),H=s("h2",{id:"getkeylist",tabindex:"-1"},[i("getKeyList "),s("a",{class:"header-anchor",href:"#getkeylist","aria-label":'Permalink to "getKeyList"'},"​")],-1),Q=s("p",null,[i("从数组中获取指定 "),s("code",null,"key"),i(" 组成的新数组，会去重也会去除不存在的值")],-1),W={class:"pure-border"},X={id:"base1",tabindex:"-1"},Z=s("a",{class:"header-anchor",href:"#base1","aria-label":'Permalink to "<divider-base /> {#base1}"'},"​",-1),ss=g("",1),is={id:"param1",tabindex:"-1"},as=s("a",{class:"header-anchor",href:"#param1","aria-label":'Permalink to "<divider-param /> {#param1}"'},"​",-1),ns=g("",2),ts=s("h2",{id:"extractfields",tabindex:"-1"},[i("extractFields "),s("a",{class:"header-anchor",href:"#extractfields","aria-label":'Permalink to "extractFields"'},"​")],-1),hs=s("p",null,"提取对象数组中的任意字段，返回一个新的数组",-1),ks={class:"pure-border"},ls={id:"base2",tabindex:"-1"},ps=s("a",{class:"header-anchor",href:"#base2","aria-label":'Permalink to "<divider-base /> {#base2}"'},"​",-1),Fs=g("",1),es={id:"param2",tabindex:"-1"},rs=s("a",{class:"header-anchor",href:"#param2","aria-label":'Permalink to "<divider-param /> {#param2}"'},"​",-1),ds=g("",2),gs=s("h2",{id:"arrayallexist",tabindex:"-1"},[i("arrayAllExist "),s("a",{class:"header-anchor",href:"#arrayallexist","aria-label":'Permalink to "arrayAllExist"'},"​")],-1),ys=s("p",null,[i("检测一个数组是否包含另一个数组中所有的值（内部使用"),s("code",null,"new Set"),i("性能更好。该方法只针对基本数据类型，需要更复杂的场景可以用"),s("code",null,"arrayAllExistDeep"),i("）")],-1),Bs={class:"pure-border"},os={id:"base3",tabindex:"-1"},cs=s("a",{class:"header-anchor",href:"#base3","aria-label":'Permalink to "<divider-base /> {#base3}"'},"​",-1),As=g("",1),Es={id:"param3",tabindex:"-1"},us=s("a",{class:"header-anchor",href:"#param3","aria-label":'Permalink to "<divider-param /> {#param3}"'},"​",-1),_s=g("",2),Ds=s("h2",{id:"arrayallexistdeep",tabindex:"-1"},[i("arrayAllExistDeep "),s("a",{class:"header-anchor",href:"#arrayallexistdeep","aria-label":'Permalink to "arrayAllExistDeep"'},"​")],-1),ms=s("p",null,"检测一个数组是否包含另一个数组中所有的值（深度对比）",-1),qs={class:"pure-border"},fs={id:"base4",tabindex:"-1"},Cs=s("a",{class:"header-anchor",href:"#base4","aria-label":'Permalink to "<divider-base /> {#base4}"'},"​",-1),bs=g("",1),vs={id:"param4",tabindex:"-1"},xs=s("a",{class:"header-anchor",href:"#param4","aria-label":'Permalink to "<divider-param /> {#param4}"'},"​",-1),Ts=g("",2),Ps=s("h2",{id:"arrayanyexist",tabindex:"-1"},[i("arrayAnyExist "),s("a",{class:"header-anchor",href:"#arrayanyexist","aria-label":'Permalink to "arrayAnyExist"'},"​")],-1),Ss=s("p",null,[i("检测一个数组是否包含另一个数组中任意一个值（内部使用"),s("code",null,"new Set"),i("性能更好。该方法只针对基本数据类型，需要更复杂的场景可以用"),s("code",null,"arrayAnyExistDeep"),i("）")],-1),Ns={class:"pure-border"},Is={id:"base5",tabindex:"-1"},$s=s("a",{class:"header-anchor",href:"#base5","aria-label":'Permalink to "<divider-base /> {#base5}"'},"​",-1),Vs=g("",1),Os={id:"param5",tabindex:"-1"},ws=s("a",{class:"header-anchor",href:"#param5","aria-label":'Permalink to "<divider-param /> {#param5}"'},"​",-1),Rs=g("",2),Js=s("h2",{id:"arrayanyexistdeep",tabindex:"-1"},[i("arrayAnyExistDeep "),s("a",{class:"header-anchor",href:"#arrayanyexistdeep","aria-label":'Permalink to "arrayAnyExistDeep"'},"​")],-1),Ks=s("p",null,"检测一个数组是否包含另一个数组中任意一个值（深度对比）",-1),Ls={class:"pure-border"},Ms={id:"base6",tabindex:"-1"},js=s("a",{class:"header-anchor",href:"#base6","aria-label":'Permalink to "<divider-base /> {#base6}"'},"​",-1),Us=g("",1),Ys={id:"param6",tabindex:"-1"},zs=s("a",{class:"header-anchor",href:"#param6","aria-label":'Permalink to "<divider-param /> {#param6}"'},"​",-1),Gs=g("",2),Hs=s("h2",{id:"swaporder",tabindex:"-1"},[i("swapOrder "),s("a",{class:"header-anchor",href:"#swaporder","aria-label":'Permalink to "swapOrder"'},"​")],-1),Qs=s("p",null,[i("数组中两个元素互换位置（内部使用 "),s("code",null,"splice"),i(" 会改变原数组）")],-1),Ws={class:"pure-border"},Xs={id:"base7",tabindex:"-1"},Zs=s("a",{class:"header-anchor",href:"#base7","aria-label":'Permalink to "<divider-base /> {#base7}"'},"​",-1),si=g("",1),ii={id:"param7",tabindex:"-1"},ai=s("a",{class:"header-anchor",href:"#param7","aria-label":'Permalink to "<divider-param /> {#param7}"'},"​",-1),ni=g("",2),ti=s("h2",{id:"isincludeallchildren",tabindex:"-1"},[i("isIncludeAllChildren "),s("a",{class:"header-anchor",href:"#isincludeallchildren","aria-label":'Permalink to "isIncludeAllChildren"'},"​")],-1),hi=s("p",null,"判断一个数组（这里简称为母体）中是否包含了另一个由基本数据类型组成的数组（这里简称为子体）中的全部元素",-1),ki={class:"pure-border"},li={id:"base8",tabindex:"-1"},pi=s("a",{class:"header-anchor",href:"#base8","aria-label":'Permalink to "<divider-base /> {#base8}"'},"​",-1),Fi=g("",1),ei={id:"param8",tabindex:"-1"},ri=s("a",{class:"header-anchor",href:"#param8","aria-label":'Permalink to "<divider-param /> {#param8}"'},"​",-1),di=g("",2),gi=s("h2",{id:"intersection",tabindex:"-1"},[i("intersection "),s("a",{class:"header-anchor",href:"#intersection","aria-label":'Permalink to "intersection"'},"​")],-1),yi=s("p",null,"获取由基本数据类型组成的数组交集",-1),Bi={class:"pure-border"},oi={id:"base9",tabindex:"-1"},ci=s("a",{class:"header-anchor",href:"#base9","aria-label":'Permalink to "<divider-base /> {#base9}"'},"​",-1),Ai=g("",1),Ei={id:"param9",tabindex:"-1"},ui=s("a",{class:"header-anchor",href:"#param9","aria-label":'Permalink to "<divider-param /> {#param9}"'},"​",-1),_i=s("p",null,"接收无数量限制的数组参数，返回由基本数据类型组成的数组交集",-1),Di=s("h2",{id:"randomdivide",tabindex:"-1"},[i("randomDivide "),s("a",{class:"header-anchor",href:"#randomdivide","aria-label":'Permalink to "randomDivide"'},"​")],-1),mi=s("p",null,[i("将一个总数随机分配到指定份数的数组中，并按指定顺序返回数组（内部使用"),s("code",null,"Knuth"),i("洗牌算法）")],-1),qi={class:"pure-border"},fi={id:"base10",tabindex:"-1"},Ci=s("a",{class:"header-anchor",href:"#base10","aria-label":'Permalink to "<divider-base /> {#base10}"'},"​",-1),bi=g("",1),vi={id:"param10",tabindex:"-1"},xi=s("a",{class:"header-anchor",href:"#param10","aria-label":'Permalink to "<divider-param /> {#param10}"'},"​",-1),Ti=g("",4),Pi={id:"type10",tabindex:"-1"},Si=s("a",{class:"header-anchor",href:"#type10","aria-label":'Permalink to "<divider-type /> {#type10}"'},"​",-1),Ni=g("",1),wi=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"utils/array/array.md","filePath":"utils/array/array.md","lastUpdated":1705736951000}'),Ii={name:"utils/array/array.md"},Ri=Object.assign(Ii,{setup(u){return I(10),(h,p)=>{const k=l("divider-base"),n=l("divider-param"),y=l("divider-type");return E(),O("div",null,[G,H,Q,s("div",W,[s("h4",X,[a(k),i(),Z]),a(w),ss,s("h4",is,[a(n),i(),as]),ns]),ts,hs,s("div",ks,[s("h4",ls,[a(k),i(),ps]),a(R),Fs,s("h4",es,[a(n),i(),rs]),ds]),gs,ys,s("div",Bs,[s("h4",os,[a(k),i(),cs]),a(J),As,s("h4",Es,[a(n),i(),us]),_s]),Ds,ms,s("div",qs,[s("h4",fs,[a(k),i(),Cs]),a(K),bs,s("h4",vs,[a(n),i(),xs]),Ts]),Ps,Ss,s("div",Ns,[s("h4",Is,[a(k),i(),$s]),a(L),Vs,s("h4",Os,[a(n),i(),ws]),Rs]),Js,Ks,s("div",Ls,[s("h4",Ms,[a(k),i(),js]),a(M),Us,s("h4",Ys,[a(n),i(),zs]),Gs]),Hs,Qs,s("div",Ws,[s("h4",Xs,[a(k),i(),Zs]),a(j),si,s("h4",ii,[a(n),i(),ai]),ni]),ti,hi,s("div",ki,[s("h4",li,[a(k),i(),pi]),a(U),Fi,s("h4",ei,[a(n),i(),ri]),di]),gi,yi,s("div",Bi,[s("h4",oi,[a(k),i(),ci]),a(Y),Ai,s("h4",Ei,[a(n),i(),ui]),_i]),Di,mi,s("div",qi,[s("h4",fi,[a(k),i(),Ci]),a(z),bi,s("h4",vi,[a(n),i(),xi]),Ti,s("h4",Pi,[a(y),i(),Si]),Ni])])}}});export{wi as __pageData,Ri as default};
